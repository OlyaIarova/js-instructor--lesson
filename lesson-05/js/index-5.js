// # –ú–æ–¥—É–ª—å 3. –ó–∞–Ω—è—Ç—Ç—è 1. –û–±'—î–∫—Ç–∏

// <!-- https://github.com/luxplanjay/js-33-qna/blob/03-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B/js/vehicles.js -->

// ## Example 1 - –û—Å–Ω–æ–≤–∏ –æ–±'—î–∫—Ç—ñ–≤

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –¥–ª—è –æ–±'—î–∫—Ç–∞ `user`, –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:

// - –¥–æ–¥–∞—î –ø–æ–ª–µ `mood` –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º `'happy'`
// - –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è `hobby` –Ω–∞ `'skydiving'`
// - –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è `premium` –Ω–∞ `false`
// - –≤–∏–≤–æ–¥–∏—Ç—å –≤–º—ñ—Å—Ç –æ–±'—î–∫—Ç–∞ `user` —É —Ñ–æ—Ä–º–∞—Ç—ñ `–∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–Ω—è` –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏
//   `Object.keys()` —Ç–∞ `for...of`

// ### –ö–æ–¥

//```js

// const user = {
//   name: 'Mango',
//   age: 20,
//   hobby: 'html',
//   premium: true,
// };

// user.mood = 'happy';
// user.hobby = 'skydiving';
// user.premium = false;

// const keys = Object.keys(user);
// for( const key of keys){
//     console.log(`${key}: , ${user[key]}`);
//}
// console.log(user);

// ```

// ## Example 2 - –º–µ—Ç–æ–¥ Object.values()

// –£ –Ω–∞—Å —î –æ–±'—î–∫—Ç, –¥–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –∑–∞—Ä–ø–ª–∞—Ç–∏ –Ω–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏. –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥ –¥–ª—è
// –ø—ñ–¥—Å—É–º–æ–≤—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞—Ä–ø–ª–∞—Ç —ñ –∑–±–µ—Ä–µ–∂—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É –∑–º—ñ–Ω–Ω—ñ–π sum. –ü–æ–≤–∏–Ω–Ω–æ
// –≤–∏–π—Ç–∏ 390. –Ø–∫—â–æ –æ–±'—î–∫—Ç `salaries` –ø–æ—Ä–æ–∂–Ω—ñ–π, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—î –±—É—Ç–∏ 0.

// ### –ö–æ–¥

// ```js

// const salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130,
// };

// const keys = Object.values(salaries);

// let sum = 0;
//  for( const value of values) {
//      sum += value;
// }

// console.log(sum);

// ```

// ## Example 3 - –ú–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é `calcTotalPrice(stones, stoneName)`, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤
// –æ–±'—î–∫—Ç—ñ–≤ —Ç–∞ —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é –∫–∞–º–µ–Ω—é. –§—É–Ω–∫—Ü—ñ—è —Ä–∞—Ö—É—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å
// –∫–∞–º—ñ–Ω–Ω—è –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑ –æ–±'—î–∫—Ç–∞

// ### –ö–æ–¥

// ```js

// const stones = [
//   { name: '–°–º–∞—Ä–∞–≥–¥', price: 1300, quantity: 4 },
//   { name: '–î—ñ–∞–º–∞–Ω—Ç', price: 2700, quantity: 3 },
//   { name: '–°–∞–ø—Ñ—ñ—Ä', price: 400, quantity: 7 },
//   { name: '–©–µ–±—ñ–Ω—å', price: 200, quantity: 2 },
// ];

// const calcTotalPrice = function (stones, stoneName){
//    let totalPrice = 0;

//     for (const stone of stones){
//       if(stone.name === stoneName){
//         totalPrice = (stone.price * stone.quantity); 
//         continue; 
//       }
//     }
//      return totalPrice;
//   }
//   console.log(calcTotalPrice(stones, '–°–∞–ø—Ñ—ñ—Ä'));
// ```

// ## Example 4 - –ö–æ–º–ø–ª–µ–∫—Å–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –æ—Å–æ–±–∏—Å—Ç–∏–º –∫–∞–±—ñ–Ω–µ—Ç–æ–º —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–Ω–∫—É. –Ñ –æ–±'—î–∫—Ç `account`
// –≤ —è–∫–æ–º—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–ª–∞–Ω—Å–æ–º —Ç–∞ —ñ—Å—Ç–æ—Ä—ñ—î—é
// —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.

// ```js

// // –¢–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –≤—Å—å–æ–≥–æ –¥–≤–∞.
// // –ú–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ —á–∏ –∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ –∑ —Ä–∞—Ö—É–Ω–∫—É.

// const Transaction = {
//   DEPOSIT: 'deposit',
//   WITHDRAW: 'withdraw',
// };

// /* –ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type —Ç–∞ amount*/

// const account = {
//   // –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É
//   balance: 0,

//   // –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
//   transactions: [],

//   /* –ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//    * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.*/

//   createTransaction(amount, type) {
//     return{
//         id: this.transactions.length,
//         amount,
//         type, 
//     };
//   },

//   /*–ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É–º–∏ –¥–æ –±–∞–ª–∞–Ω—Å—É.
//    * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//    * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
//    * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π*/

//   deposit(amount) {
//     const transaction = this.createTransaction(amount, Transaction.WITHDRAW);

//     this.balance += amount;
//     this.transactions.push(transaction);
//   },

//   /* –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–Ω—è—Ç—Ç—è —Å—É–º–∏ –∑ –±–∞–ª–∞–Ω—Å—É.
//    * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//    * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
//    * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.
//    *
//    * –Ø–∫—â–æ amount –±—ñ–ª—å—à–µ –Ω—ñ–∂ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å, –≤–∏–≤–æ–¥—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
//    * –ø—Ä–æ —Ç–µ, —â–æ –∑–Ω—è—Ç—Ç—è —Ç–∞–∫–æ—ó —Å—É–º–∏ –Ω–µ –º–æ–∂–ª–∏–≤–µ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤. */

//   withdraw(amount) {
//     if(amount > this.balance){
//     console.log(`–∑–Ω—è—Ç—Ç—è —Ç–∞–∫–æ—ó —Å—É–º–∏ –Ω–µ –º–æ–∂–ª–∏–≤–µ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.`);
//     return;
//     }
//     const transaction = this.createTransaction(amount, Transaction.DEPOSIT);

//     this.balance -= amount;
//     this.transactions.push(transaction);
//   },

//   /* –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å */

//   getBalance() {
//     return this.balance;
//   },

//   /* –ú–µ—Ç–æ–¥ —à—É–∫–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–æ id*/

//   getTransactionDetails(id) {
// for (const transaction of this.transactions){
// if(transaction.id === id)
//     return transaction;  
// }
//   },

//   /* –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—à—Ç—ñ–≤
//    * –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —É—Å—ñ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π*/

//   getTransactionTotal(type) {
//     let sum = 0;
//     for (const transaction of this.transactions){
//         if(transaction.type === type ){
//            sum  += 1;
//            return sum;
//         };
       
//   }
// }
// }

// console.log(account.getBalance());

// account.deposit(100);
// console.log(account.getBalance());
// console.log(account.transactions);

// account.withdraw(50);
// console.log(account.getBalance());
// console.log(account.transactions);

// account.withdraw(500);
// console.log(account.getBalance());
// console.log(account.transactions);

// console.log('->', account.getTransactionDetails(1));
// account.deposit(200);
// console.log(account.getBalance());
// console.log(account.transactions);

// account.deposit(200);
// console.log(account.getTransactionTotal(Transaction.DEPOSIT));

// ```






//  * –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:
//  * - getItems()
//  * - add(product)
//  * - remove(productName)
//  * - clear()
//  * - countTotalPrice()
//  * - increaseQuantity(productName)
//  * - decreaseQuantity(productName)
//  *
//  * { name: 'üçé', price: 50 }
//  * { name: 'üçá', price: 70 }
//  * { name: 'üçã', price: 60 }
//  * { name: 'üçì', price: 110 }
//  */

// const cart = {
//   items: [],
//   getItems() {
//     return this.items;
//   },
//   add(product) {
//     for (const item of this.items) {
//       if (item.name === product.name) {
//         item.quantity += 1;
//         return;
//       }
//     }

//     const newProduct = {
//       ...product,
//       quantity: 1,
//     };

//     this.items.push(newProduct);
//   },
//   remove(productName) {
//     const { items } = this;

//     for (let i = 0; i < items.length; i += 1) {
//       const item = items[i];

//       if (productName === item.name) {
//         console.log('–Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç ', productName);
//         console.log('–∏–Ω–¥–µ–∫—Å: ', i);

//         items.splice(i, 1);
//       }
//     }
//   },
//   clear() {
//     this.items = [];
//   },
//   countTotalPrice() {
//     const { items } = this;
//     let total = 0;

//     for (const { price, quantity } of items) {
//       total += price * quantity;
//     }

//     return total;
//   },
//   increaseQuantity(productName) {},
//   decreaseQuantity(productName) {},
// };

// console.log(cart.getItems());

// cart.add({ name: 'üçé', price: 50 });
// cart.add({ name: 'üçá', price: 60 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçì', price: 110 });
// cart.add({ name: 'üçì', price: 110 });
// cart.add({ name: 'üçì', price: 110 });

// console.table(cart.getItems());

// // console.log('Total: ', cart.countTotalPrice());

// cart.remove('üçá');
// console.table(cart.getItems());

// cart.clear();
// console.log(cart.getItems());

// console.log('Total: ', cart.countTotalPrice());

// cart.increaseQuantity('üçé');
// console.table(cart.getItems());

// cart.decreaseQuantity('üçã');
// cart.decreaseQuantity('üçã');
// console.table(cart.getItems());



const atTheOldToad = {
    potions: [
      { name: "Speed potion", price: 460 },
      { name: "Dragon breath", price: 780 },
      { name: "Stone skin", price: 520 },
    ],
    // Change code below this line
    getPotions() {
      return this.potions;
    },
    addPotion(newPotion) {
      for (const potion of this.potions){
      if (potion.name === newPotion.name) {
        return `Error! Potion ${newPotion.name} is already in your inventory!`;
  // –û—à–∏–±–∫–∞! –ó–µ–ª—å–µ ${newPotion} —É–∂–µ –≤ –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!`
      }
      }
      this.potions.push(newPotion);
    },
    removePotion(potionName) {
      for (let i = 0; i < this.potions.length; i += 1) {
      if (potionName === this.potions[i].name) {
           this.potions.splice(i, 1); 
      }      
      }
       return `Potion ${potionName} is not in inventory!`; 
    },
    updatePotionName(oldName, newName) {
  for (let i = 0; i < this.potions.length; i += 1) {
      if (oldName === this.potions[i].name) {
       this.potions[i].name =  newName;   
      }    
  }
  return `Potion ${oldName} is not in inventory!`; 
    },
    // Change code above this line
  };


  console.table(atTheOldToad.getPotions() );
  atTheOldToad.removePotion('Stone skin');
  console.table(atTheOldToad.removePotion());

  atTheOldToad.removePotion("Invisibility");
  console.log(atTheOldToad.removePotion());
  
//   console.log('Total: ', cart.countTotalPrice());
  
  atTheOldToad.updatePotionName("Invisibility");
  console.table(atTheOldToad.updatePotionName());
  
//   atTheOldToad.decreaseQuantity('üçã');
//   atTheOldToad.decreaseQuantity('üçã');
//   console.table(atTheOldToad.getItems());


  
//* –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ trello* - –ú–µ—Ç–æ–¥ splice()* - –£–¥–∞–ª–∏—Ç—å* - –î–æ–±–∞–≤–∏—Ç—å* - –û–±–Ω–æ–≤–∏—Ç—å*/

const cards = [
    '–ö–∞—Ä—Ç–æ—á–∫–∞-1',
    '–ö–∞—Ä—Ç–æ—á–∫–∞-2',
    '–ö–∞—Ä—Ç–æ—á–∫–∞-3',
    '–ö–∞—Ä—Ç–æ—á–∫–∞-4',
    '–ö–∞—Ä—Ç–æ—á–∫–∞-5',
  ]; 
//   console.table(cards);
  /** –£–¥–∞–ª–µ–Ω–∏–µ (–ø–æ –∏–Ω–¥–µ–∫—Å—É), –º–µ—Ç–æ–¥ indexOf()*/
  
  // const cardToRemove = '–ö–∞—Ä—Ç–æ—á–∫–∞-3';
  // const index = cards.indexOf(cardToRemove);
  // console.log(index);
  
  // cards.splice(index, 1);
  // console.table(cards);
  
  /** –î–æ–±–∞–≤–ª–µ–Ω–∏–µ (–ø–æ –∏–Ω–¥–µ–∫—Å—É)*/
  // const cardToInsert = '–ö–∞—Ä—Ç–æ—á–∫–∞-6';
  // const index = 3;
  
  // cards.splice(index, 0, cardToInsert);
  // console.table(cards);
  
  /** –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–ø–æ –∏–Ω–¥–µ–∫—Å—É)*/
  const cardToUpdate = '–ö–∞—Ä—Ç–æ—á–∫–∞-4';
  const index = cards.indexOf(cardToUpdate);  
//   console.log(index);
  
  cards.splice(index, 1, '–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞-4'); 
//   console.table(cards);